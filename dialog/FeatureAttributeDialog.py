# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mapToolInputAttr.ui'
#
# Created by: qgis.PyQt UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from qgis.PyQt import QtCore, QtWidgets
from qgis.PyQt.QtWidgets import QDesktopWidget,QDialog,QLineEdit
from qgis.PyQt.QtCore import Qt
from qgis.core import QgsFeature,QgsGeometry,QgsPointXY


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 122)
        Dialog.setMinimumSize(QtCore.QSize(400, 122))
        Dialog.setMaximumSize(QtCore.QSize(400, 268))
        Dialog.setWindowFlags(Dialog.windowFlags() & ~(QtCore.Qt.WindowContextHelpButtonHint)) # 隐藏对话框标题栏默认的问号按钮
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.attrsLayout = QtWidgets.QVBoxLayout()
        self.attrsLayout.setObjectName("attrsLayout")
        self.scrollArea = QtWidgets.QScrollArea(Dialog)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.gridLayoutWidget_2 = QtWidgets.QWidget()
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setContentsMargins(5, 5, 5, 5)
        self.gridLayout.setObjectName("gridLayout")
        self.gridLayoutWidget_2.setLayout(self.gridLayout)
        self.scrollArea.setWidget(self.gridLayoutWidget_2)
        self.attrsLayout.addWidget(self.scrollArea)
        self.verticalLayout.addLayout(self.attrsLayout)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.add = QtWidgets.QPushButton(Dialog)
        self.add.setMaximumSize(QtCore.QSize(50, 23))
        self.add.setObjectName("add")
        self.horizontalLayout.addWidget(self.add, 0, QtCore.Qt.AlignBottom)
        self.cancel = QtWidgets.QPushButton(Dialog)
        self.cancel.setMaximumSize(QtCore.QSize(50, 23))
        self.cancel.setObjectName("cancel")
        self.horizontalLayout.addWidget(self.cancel, 0, QtCore.Qt.AlignBottom)
        self.verticalLayout.addLayout(self.horizontalLayout)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "属性编辑"))
        self.add.setText(_translate("Dialog", "确认"))
        self.cancel.setText(_translate("Dialog", "取消"))

class FeatureAttributeDialog(QDialog,Ui_Dialog):
    def __init__(self,mapTool,feat,mainWindow):
        super(FeatureAttributeDialog, self).__init__(mainWindow)
        self.setupUi(self)
        self.mapTool = mapTool
        self.feat : QgsFeature = feat
        self.mainWindow = mainWindow
        self.initUI()
        self.connectFunc()
        self.center()

    def center(self):
        # 获取屏幕的尺寸信息
        screen = QDesktopWidget().screenGeometry()
        # 获取窗口的尺寸信息
        size = self.geometry()
        # 将窗口移动到指定位置
        self.move(int((screen.width() - size.width()) / 2), int((screen.height() - size.height()) / 2))

    def closeEvent(self, e):
        self.mapTool.reset()
        e.accept()

    def addLayoutBotton(self,fieldName):
        row_count = self.gridLayout.rowCount()
        label = QtWidgets.QLabel(fieldName)
        label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)  # 右对齐，垂直居中
        self.gridLayout.addWidget(label,row_count,0)
        lineEdit = QtWidgets.QLineEdit()
        self.gridLayout.addWidget(lineEdit,row_count,1)
        self.gridLayoutWidget_2.adjustSize()       
        # 手动调整窗口大小
        new_width = self.width()
        new_height = self.gridLayoutWidget_2.height() + 30  # 每行增加 30 像素高度
        self.resize(new_width, new_height)
        self.attrLineDir[fieldName] = lineEdit

    def addFeature(self):
        for name in self.feat.fields().names():
            tempLine : QLineEdit = self.attrLineDir[name]
            if tempLine.text() != "None":
                self.feat.setAttribute(name,tempLine.text())
        if self.mapTool.wkbType == "rectangle":
            self.feat.setGeometry(self.mapTool.r)
        elif self.mapTool.wkbType == "polygon":
            self.feat.setGeometry(self.mapTool.p)
        elif self.mapTool.wkbType == "circle":
            pointsXY = [[]]
            for point in self.mapTool.points[0:-1]:
                pointsXY[0].append(QgsPointXY(point))
            self.feat.setGeometry(QgsGeometry.fromPolygonXY(pointsXY))
        self.mapTool.editLayer.addFeature(self.feat)
        # self.editLayer.updateExtents()
        self.mapTool.canvas.refresh()
        self.mapTool.reset()
        # 动态更新撤销重做
        #self.mainWindow.updateShpUndoRedoButton()
        self.close()

    def initUI(self):
        #self.setFixedSize(self.size())
        self.setWindowTitle("属性编辑")
        self.attrLineDir = {}
        for name in self.feat.fields().names():
            self.addLayoutBotton(name)

    def connectFunc(self):
        self.add.clicked.connect(self.addFeature)
        self.cancel.clicked.connect(self.close)