# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DeletSamplesDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from qgis.PyQt import QtCore, QtWidgets
from qgis.PyQt.QtCore import Qt
from qgis.PyQt.QtWidgets import QMessageBox
from lxml import etree
# XML文件的路径
from DeeplearningSystem import sample_cofing_path


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.setWindowFlags(Dialog.windowFlags() & ~(QtCore.Qt.WindowContextHelpButtonHint)) # 隐藏对话框标题栏默认的问号按钮
        Dialog.resize(514, 394)
        Dialog.setMinimumSize(QtCore.QSize(0, 0))
        Dialog.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.gridLayout_3 = QtWidgets.QGridLayout(Dialog)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_1 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_1.setObjectName("horizontalLayout_1")
        self.verticalLayoutMain = QtWidgets.QVBoxLayout()
        self.verticalLayoutMain.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayoutMain.setObjectName("verticalLayoutMain")
        self.groupBox_SelectSample = QtWidgets.QGroupBox(Dialog)
        self.groupBox_SelectSample.setObjectName("groupBox_SelectSample")
        self.horizontalLayout_openImage = QtWidgets.QHBoxLayout(self.groupBox_SelectSample)
        self.horizontalLayout_openImage.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_openImage.setContentsMargins(9, 9, 9, 9)
        self.horizontalLayout_openImage.setSpacing(6)
        self.horizontalLayout_openImage.setObjectName("horizontalLayout_openImage")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.groupBox_SelectSample)
        self.label.setMaximumSize(QtCore.QSize(70, 16777215))
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox_sampleClass = QtWidgets.QComboBox(self.groupBox_SelectSample)
        self.comboBox_sampleClass.setEnabled(True)
        self.comboBox_sampleClass.setMinimumSize(QtCore.QSize(0, 0))
        self.comboBox_sampleClass.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.comboBox_sampleClass.setEditable(True)
        self.comboBox_sampleClass.setObjectName("comboBox_sampleClass")
        self.comboBox_sampleClass.activated.connect(self.on_comboBox_sampleClass_activated)# 将 QComboBox 的 currentIndexChanged 信号连接到槽函数
        self.horizontalLayout.addWidget(self.comboBox_sampleClass)
        self.pushButton_QuerySample = QtWidgets.QPushButton(self.groupBox_SelectSample)
        self.pushButton_QuerySample.setMinimumSize(QtCore.QSize(71, 23))
        self.pushButton_QuerySample.setMaximumSize(QtCore.QSize(71, 23))
        self.pushButton_QuerySample.setObjectName("pushButton_QuerySample")
        self.pushButton_QuerySample.clicked.connect(self.on_querySample_clicked)#####################
        self.horizontalLayout.addWidget(self.pushButton_QuerySample)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(-1, -1, -1, 6)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.checkBox = QtWidgets.QCheckBox(self.groupBox_SelectSample)
        self.checkBox.setMinimumSize(QtCore.QSize(15, 15))
        self.checkBox.setMaximumSize(QtCore.QSize(10, 10))
        self.checkBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.horizontalLayout_2.addWidget(self.checkBox)
        self.label_7 = QtWidgets.QLabel(self.groupBox_SelectSample)
        self.label_7.setMinimumSize(QtCore.QSize(0, 0))
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_2.addWidget(self.label_7)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.tableView_sampleList = QtWidgets.QTableView(self.groupBox_SelectSample)
        self.tableView_sampleList.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tableView_sampleList.setObjectName("tableView_sampleList")
        self.tableView_sampleList.horizontalHeader().setCascadingSectionResizes(False)
        self.verticalLayout_2.addWidget(self.tableView_sampleList)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        self.horizontalLayout_openImage.addLayout(self.verticalLayout_4)
        self.verticalLayoutMain.addWidget(self.groupBox_SelectSample)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_accept = QtWidgets.QPushButton(Dialog)
        self.pushButton_accept.setObjectName("pushButton_accept")
        self.verticalLayout.addWidget(self.pushButton_accept, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayoutMain.addLayout(self.verticalLayout)
        self.horizontalLayout_1.addLayout(self.verticalLayoutMain)
        self.gridLayout_3.addLayout(self.horizontalLayout_1, 0, 0, 1, 1)

        self.retranslateUi(Dialog)
        self.pushButton_accept.clicked.connect(Dialog.accept) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)


        # 初始化
        tree = etree.parse(sample_cofing_path)
        root = tree.getroot()# Samples
        for child in root.iterchildren():
            self.comboBox_sampleClass.addItem(child.get('EnglishName'))
            

        self.comboBox_sampleClass.setCurrentIndex(-1)
        self.checkBox.stateChanged.connect(self.onHeaderCheckBoxStateChanged) 
        # 创建模型并设置数据
        from qgis.PyQt.QtGui import QStandardItemModel
        self.model = QStandardItemModel()
        self.model.setHorizontalHeaderLabels(["名称", "类别", "尺寸", "数量", "选择"])  # 设置列头标签
        # 创建表格视图
        self.tableView_sampleList.setModel(self.model)
        self.tableView_sampleList.resizeColumnsToContents()        
        # 设置 QTableView 的列头可排序
        self.tableView_sampleList.horizontalHeader().setSectionsClickable(True)
        self.tableView_sampleList.horizontalHeader().setSortIndicatorShown(True)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "删除样本库"))
        self.groupBox_SelectSample.setTitle(_translate("Dialog", "样本库选择："))
        self.label.setText(_translate("Dialog", "样本库查询："))
        self.pushButton_QuerySample.setText(_translate("Dialog", "查询"))
        self.checkBox.setToolTip(_translate("Dialog", "全选"))
        self.label_7.setText(_translate("Dialog", "样本库列表："))
        self.pushButton_accept.setText(_translate("Dialog", "确定"))

    def on_querySample_clicked(self):
        from qgis.PyQt.QtGui import QStandardItem   
        
        sampleClass = self.comboBox_sampleClass.currentText()
        self.sampleList = [] 
        
        # 解析XML文件
        tree = etree.parse(sample_cofing_path)
        node = tree.xpath(f'//SampleClass[@EnglishName="{sampleClass}"]')[0]# 默认一个
        if not node:
            QMessageBox.information(None, '提示', f"没有找到类别为{sampleClass}的样本库！\n请检查后，重新选择！", QMessageBox.Ok)
            return
        for child in node.iterchildren():
            samplePath = child.text
            from glob import glob
            count = len(glob(f'{samplePath}/image/*.tif'))
            checkbox_item = QStandardItem()
            checkbox_item.setCheckable(True)
            #checkbox_item.setCheckState(Qt.Unchecked)  # 可选：设置初始检查状态                               
            row = [QStandardItem(child.get('Name')), QStandardItem(child.get('Type')), QStandardItem(child.get('Size')), QStandardItem(str(count)),checkbox_item]
            self.sampleList.append(child.get('Name'))
            # 将复选框项添加到行列表中（假设您想在列表的末尾添加它）
            self.model.appendRow(row)
        self.tableView_sampleList.resizeColumnsToContents()       

    def onHeaderCheckBoxStateChanged(self, state):
        # 根据表头复选框的状态遍历模型中的所有行，并设置相应列的复选框项
        column_index = 4  # 假设复选框项在第三列（索引为4）
        # 获取选择模型
        selection_model = self.tableView_sampleList.selectionModel()
        # 获取所有选中的行索引（这里我们假设关心的是顶层项的选中情况，所以传入 0 作为列号）
        selected_rows = selection_model.selectedRows(0)       
        # 计算选中的行数
        number_of_selected_rows = len(selected_rows)       
        #print(f"Number of selected rows: {number_of_selected_rows}")
        if number_of_selected_rows>0:
            # 检查目标行是否在选中的行中
            for index in selected_rows:
                checkbox_item = self.model.item(index.row(), column_index)
                if checkbox_item.isCheckable():
                    checkbox_item.setCheckState(state)
        else:
            number_of_selected_rows = 0
            for row_index in range(self.model.rowCount()):
                
                checkbox_item = self.model.item(row_index, column_index)
                if checkbox_item.isCheckable():
                    checkbox_item.setCheckState(state)
                    
                check_state = self.model.item(row_index, column_index).checkState()
                if check_state == Qt.Checked:
                    number_of_selected_rows+=1
       
        QMessageBox.information(None, '提示', f"共选择{number_of_selected_rows}样本分库！", QMessageBox.Ok)

    def on_comboBox_sampleClass_activated(self,index):         
        self.model.removeRows(0, self.model.rowCount())
        self.tableView_sampleList.resizeColumnsToContents()