# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWinUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 800)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/mainWindow2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 25))
        self.menubar.setMinimumSize(QtCore.QSize(0, 25))
        self.menubar.setObjectName("menubar")
        self.fileMenu = QtWidgets.QMenu(self.menubar)
        self.fileMenu.setMinimumSize(QtCore.QSize(0, 0))
        self.fileMenu.setObjectName("fileMenu")
        self.viewMenu = QtWidgets.QMenu(self.menubar)
        self.viewMenu.setObjectName("viewMenu")
        self.sampleMenu = QtWidgets.QMenu(self.menubar)
        self.sampleMenu.setObjectName("sampleMenu")
        self.trainMenu = QtWidgets.QMenu(self.menubar)
        self.trainMenu.setObjectName("trainMenu")
        self.processMenu = QtWidgets.QMenu(self.menubar)
        self.processMenu.setObjectName("processMenu")
        self.toolMenu = QtWidgets.QMenu(self.menubar)
        self.toolMenu.setObjectName("toolMenu")
        self.helpMenu = QtWidgets.QMenu(self.menubar)
        self.helpMenu.setObjectName("helpMenu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setEnabled(True)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMinimumSize(QtCore.QSize(0, 25))
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.dockWidgetTOCView = QtWidgets.QDockWidget(MainWindow)
        self.dockWidgetTOCView.setMinimumSize(QtCore.QSize(200, 38))
        self.dockWidgetTOCView.setObjectName("dockWidgetTOCView")
        self.dockWidgetContentsTOCView = QtWidgets.QWidget()
        self.dockWidgetContentsTOCView.setObjectName("dockWidgetContentsTOCView")
        self.dockWidgetTOCView.setWidget(self.dockWidgetContentsTOCView)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidgetTOCView)
        self.dockWidgetSampleListView = QtWidgets.QDockWidget(MainWindow)
        self.dockWidgetSampleListView.setObjectName("dockWidgetSampleListView")
        self.dockWidgetContentsSamplesListView = QtWidgets.QWidget()
        self.dockWidgetContentsSamplesListView.setObjectName("dockWidgetContentsSamplesListView")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.dockWidgetContentsSamplesListView)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tableView = QtWidgets.QTableView(self.dockWidgetContentsSamplesListView)
        self.tableView.setObjectName("tableView")
        self.horizontalLayout.addWidget(self.tableView)
        self.dockWidgetSampleListView.setWidget(self.dockWidgetContentsSamplesListView)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidgetSampleListView)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.actionqqq = QtWidgets.QAction(MainWindow)
        self.actionqqq.setObjectName("actionqqq")
        self.actionNewProject = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/SystemProject_NewProject.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewProject.setIcon(icon1)
        self.actionNewProject.setObjectName("actionNewProject")
        self.actionOpenProject = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/SystemProject_OpenProject.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpenProject.setIcon(icon2)
        self.actionOpenProject.setObjectName("actionOpenProject")
        self.actionCloseProject = QtWidgets.QAction(MainWindow)
        self.actionCloseProject.setObjectName("actionCloseProject")
        self.actionSaveProject = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/SystemProject_SaveProject.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveProject.setIcon(icon3)
        self.actionSaveProject.setObjectName("actionSaveProject")
        self.actionSaveAsProject = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/SystemProject_SaveAsProject.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveAsProject.setIcon(icon4)
        self.actionSaveAsProject.setObjectName("actionSaveAsProject")
        self.actionOpenRas = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/DataLoader_Raster.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpenRas.setIcon(icon5)
        self.actionOpenRas.setObjectName("actionOpenRas")
        self.actionOpenVec = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/DataLoader_Vector.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpenVec.setIcon(icon6)
        self.actionOpenVec.setObjectName("actionOpenVec")
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        self.actionZoomIn.setCheckable(True)
        self.actionZoomIn.setChecked(False)
        self.actionZoomIn.setEnabled(True)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/MapBrowser_ZoomIn.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomIn.setIcon(icon7)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        self.actionZoomOut.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icon/MapBrowser_ZoomOut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomOut.setIcon(icon8)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionPan = QtWidgets.QAction(MainWindow)
        self.actionPan.setCheckable(True)
        self.actionPan.setChecked(True)
        self.actionPan.setEnabled(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icon/MapBrowser_Pan.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPan.setIcon(icon9)
        self.actionPan.setObjectName("actionPan")
        self.actionFullExtent = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icon/MapBrowser_FullExtent.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFullExtent.setIcon(icon10)
        self.actionFullExtent.setObjectName("actionFullExtent")
        self.actionSwipe = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icon/MapBrowser_SwipeLayer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSwipe.setIcon(icon11)
        self.actionSwipe.setObjectName("actionSwipe")
        self.actionLayerView = QtWidgets.QAction(MainWindow)
        self.actionLayerView.setCheckable(True)
        self.actionLayerView.setChecked(True)
        self.actionLayerView.setObjectName("actionLayerView")
        self.actionSamplesView = QtWidgets.QAction(MainWindow)
        self.actionSamplesView.setCheckable(True)
        self.actionSamplesView.setChecked(True)
        self.actionSamplesView.setObjectName("actionSamplesView")
        self.actionClearRecentFiles = QtWidgets.QAction(MainWindow)
        self.actionClearRecentFiles.setObjectName("actionClearRecentFiles")
        self.actionEditSample = QtWidgets.QAction(MainWindow)
        self.actionEditSample.setCheckable(True)
        self.actionEditSample.setEnabled(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icon/Edit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEditSample.setIcon(icon12)
        self.actionEditSample.setObjectName("actionEditSample")
        self.actionDrawPolygon = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_DrawPolygonFeature.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDrawPolygon.setIcon(icon13)
        self.actionDrawPolygon.setObjectName("actionDrawPolygon")
        self.actionDeleteSample = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_DeleteFeature.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteSample.setIcon(icon14)
        self.actionDeleteSample.setObjectName("actionDeleteSample")
        self.actionMakeSample = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icon/label_create.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMakeSample.setIcon(icon15)
        self.actionMakeSample.setObjectName("actionMakeSample")
        self.actionEvalSample = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icon/label_eval.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEvalSample.setIcon(icon16)
        self.actionEvalSample.setObjectName("actionEvalSample")
        self.actionImportSample = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icon/label_import1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImportSample.setIcon(icon17)
        self.actionImportSample.setObjectName("actionImportSample")
        self.actionDeleteSamples = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icon/label_delete1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteSamples.setIcon(icon18)
        self.actionDeleteSamples.setObjectName("actionDeleteSamples")
        self.actionQuerySample = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icon/label_query.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuerySample.setIcon(icon19)
        self.actionQuerySample.setObjectName("actionQuerySample")
        self.actionCloseSamples = QtWidgets.QAction(MainWindow)
        self.actionCloseSamples.setEnabled(False)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icon/label_close1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCloseSamples.setIcon(icon20)
        self.actionCloseSamples.setObjectName("actionCloseSamples")
        self.actionModelTrain = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icon/Train_Start.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionModelTrain.setIcon(icon21)
        self.actionModelTrain.setObjectName("actionModelTrain")
        self.actionStopTrain = QtWidgets.QAction(MainWindow)
        self.actionStopTrain.setEnabled(False)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icon/Train_Stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStopTrain.setIcon(icon22)
        self.actionStopTrain.setObjectName("actionStopTrain")
        self.actionWatchTrain = QtWidgets.QAction(MainWindow)
        self.actionWatchTrain.setEnabled(False)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icon/Train_Watch.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionWatchTrain.setIcon(icon23)
        self.actionWatchTrain.setObjectName("actionWatchTrain")
        self.actionDrawRect = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_DrawRectangleFeature.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDrawRect.setIcon(icon24)
        self.actionDrawRect.setObjectName("actionDrawRect")
        self.actionClearDraw = QtWidgets.QAction(MainWindow)
        self.actionClearDraw.setEnabled(False)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icon/MainCategory_DeleteAllSelect.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearDraw.setIcon(icon25)
        self.actionClearDraw.setObjectName("actionClearDraw")
        self.actionSegment = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icon/Segment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSegment.setIcon(icon26)
        self.actionSegment.setObjectName("actionSegment")
        self.actionPostClump = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icon/ImgClass_Post_Comb.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPostClump.setIcon(icon27)
        self.actionPostClump.setObjectName("actionPostClump")
        self.actionRasterToVector = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icon/Utility_RasterToVector.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRasterToVector.setIcon(icon28)
        self.actionRasterToVector.setObjectName("actionRasterToVector")
        self.actionSplitDataSet = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icon/SplitDataset.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSplitDataSet.setIcon(icon29)
        self.actionSplitDataSet.setObjectName("actionSplitDataSet")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icon/About.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon30)
        self.actionAbout.setObjectName("actionAbout")
        self.actionSampleStatistic = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icon/label_statistic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSampleStatistic.setIcon(icon31)
        self.actionSampleStatistic.setObjectName("actionSampleStatistic")
        self.actionUpdateDatabase = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icon/net_update.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUpdateDatabase.setIcon(icon32)
        self.actionUpdateDatabase.setObjectName("actionUpdateDatabase")
        self.actionModelImport = QtWidgets.QAction(MainWindow)
        self.actionModelImport.setObjectName("actionModelImport")
        self.actionImportModel = QtWidgets.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icon/net_import.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImportModel.setIcon(icon33)
        self.actionImportModel.setObjectName("actionImportModel")
        self.actionDeleteModel = QtWidgets.QAction(MainWindow)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icon/net_delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteModel.setIcon(icon34)
        self.actionDeleteModel.setObjectName("actionDeleteModel")
        self.actionModelStatistic = QtWidgets.QAction(MainWindow)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icon/net_statistic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionModelStatistic.setIcon(icon35)
        self.actionModelStatistic.setObjectName("actionModelStatistic")
        self.actionUpdateModelsDB = QtWidgets.QAction(MainWindow)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icon/label_update.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUpdateModelsDB.setIcon(icon36)
        self.actionUpdateModelsDB.setObjectName("actionUpdateModelsDB")
        self.actionCreateFishnet = QtWidgets.QAction(MainWindow)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icon/create_fishnet.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreateFishnet.setIcon(icon37)
        self.actionCreateFishnet.setObjectName("actionCreateFishnet")
        self.actionCreateShape = QtWidgets.QAction(MainWindow)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_CreateLayer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCreateShape.setIcon(icon38)
        self.actionCreateShape.setObjectName("actionCreateShape")
        self.actionClearSelection = QtWidgets.QAction(MainWindow)
        self.actionClearSelection.setEnabled(True)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_ClearSelection.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearSelection.setIcon(icon39)
        self.actionClearSelection.setObjectName("actionClearSelection")
        self.actionSelectFeature = QtWidgets.QAction(MainWindow)
        self.actionSelectFeature.setCheckable(True)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icon/VectorEditor_SelectFeature.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelectFeature.setIcon(icon40)
        self.actionSelectFeature.setObjectName("actionSelectFeature")
        self.actionFeatureIdentify = QtWidgets.QAction(MainWindow)
        self.actionFeatureIdentify.setCheckable(True)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icon/FeatureIdentify.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFeatureIdentify.setIcon(icon41)
        self.actionFeatureIdentify.setObjectName("actionFeatureIdentify")
        self.actionUserManual = QtWidgets.QAction(MainWindow)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icon/UserManual.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUserManual.setIcon(icon42)
        self.actionUserManual.setObjectName("actionUserManual")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icon/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon43)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icon/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon44)
        self.actionRedo.setObjectName("actionRedo")
        self.fileMenu.addAction(self.actionNewProject)
        self.fileMenu.addAction(self.actionOpenProject)
        self.fileMenu.addAction(self.actionCloseProject)
        self.fileMenu.addAction(self.actionSaveProject)
        self.fileMenu.addAction(self.actionSaveAsProject)
        self.fileMenu.addSeparator()
        self.fileMenu.addAction(self.actionOpenRas)
        self.fileMenu.addAction(self.actionOpenVec)
        self.viewMenu.addAction(self.actionZoomIn)
        self.viewMenu.addAction(self.actionZoomOut)
        self.viewMenu.addAction(self.actionPan)
        self.viewMenu.addAction(self.actionFullExtent)
        self.viewMenu.addAction(self.actionSwipe)
        self.viewMenu.addSeparator()
        self.viewMenu.addAction(self.actionLayerView)
        self.viewMenu.addAction(self.actionSamplesView)
        self.sampleMenu.addAction(self.actionCreateFishnet)
        self.sampleMenu.addAction(self.actionCreateShape)
        self.sampleMenu.addSeparator()
        self.sampleMenu.addAction(self.actionEditSample)
        self.sampleMenu.addAction(self.actionDrawPolygon)
        self.sampleMenu.addAction(self.actionSelectFeature)
        self.sampleMenu.addAction(self.actionClearSelection)
        self.sampleMenu.addAction(self.actionFeatureIdentify)
        self.sampleMenu.addAction(self.actionDeleteSample)
        self.sampleMenu.addSeparator()
        self.sampleMenu.addAction(self.actionUndo)
        self.sampleMenu.addAction(self.actionRedo)
        self.sampleMenu.addSeparator()
        self.sampleMenu.addAction(self.actionMakeSample)
        self.sampleMenu.addAction(self.actionEvalSample)
        self.sampleMenu.addAction(self.actionSampleStatistic)
        self.sampleMenu.addSeparator()
        self.sampleMenu.addAction(self.actionImportSample)
        self.sampleMenu.addAction(self.actionDeleteSamples)
        self.sampleMenu.addAction(self.actionQuerySample)
        self.sampleMenu.addAction(self.actionCloseSamples)
        self.trainMenu.addAction(self.actionModelTrain)
        self.trainMenu.addAction(self.actionStopTrain)
        self.trainMenu.addAction(self.actionWatchTrain)
        self.trainMenu.addSeparator()
        self.trainMenu.addAction(self.actionImportModel)
        self.trainMenu.addAction(self.actionDeleteModel)
        self.trainMenu.addAction(self.actionModelStatistic)
        self.processMenu.addAction(self.actionDrawRect)
        self.processMenu.addAction(self.actionClearDraw)
        self.processMenu.addSeparator()
        self.processMenu.addAction(self.actionSegment)
        self.processMenu.addSeparator()
        self.processMenu.addAction(self.actionPostClump)
        self.processMenu.addAction(self.actionRasterToVector)
        self.toolMenu.addAction(self.actionSplitDataSet)
        self.toolMenu.addSeparator()
        self.toolMenu.addAction(self.actionUpdateDatabase)
        self.toolMenu.addAction(self.actionUpdateModelsDB)
        self.helpMenu.addAction(self.actionUserManual)
        self.helpMenu.addAction(self.actionAbout)
        self.menubar.addAction(self.fileMenu.menuAction())
        self.menubar.addAction(self.viewMenu.menuAction())
        self.menubar.addAction(self.sampleMenu.menuAction())
        self.menubar.addAction(self.trainMenu.menuAction())
        self.menubar.addAction(self.processMenu.menuAction())
        self.menubar.addAction(self.toolMenu.menuAction())
        self.menubar.addAction(self.helpMenu.menuAction())
        self.toolBar.addAction(self.actionNewProject)
        self.toolBar.addAction(self.actionOpenProject)
        self.toolBar.addAction(self.actionSaveProject)
        self.toolBar.addAction(self.actionSaveAsProject)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOpenRas)
        self.toolBar.addAction(self.actionOpenVec)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZoomIn)
        self.toolBar.addAction(self.actionZoomOut)
        self.toolBar.addAction(self.actionPan)
        self.toolBar.addAction(self.actionFullExtent)
        self.toolBar.addAction(self.actionSwipe)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCreateFishnet)
        self.toolBar.addAction(self.actionCreateShape)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionEditSample)
        self.toolBar.addAction(self.actionDrawPolygon)
        self.toolBar.addAction(self.actionSelectFeature)
        self.toolBar.addAction(self.actionClearSelection)
        self.toolBar.addAction(self.actionFeatureIdentify)
        self.toolBar.addAction(self.actionDeleteSample)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUndo)
        self.toolBar.addAction(self.actionRedo)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionMakeSample)
        self.toolBar.addAction(self.actionEvalSample)
        self.toolBar.addAction(self.actionSampleStatistic)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionImportSample)
        self.toolBar.addAction(self.actionDeleteSamples)
        self.toolBar.addAction(self.actionQuerySample)
        self.toolBar.addAction(self.actionCloseSamples)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionModelTrain)
        self.toolBar.addAction(self.actionStopTrain)
        self.toolBar.addAction(self.actionWatchTrain)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionImportModel)
        self.toolBar.addAction(self.actionDeleteModel)
        self.toolBar.addAction(self.actionModelStatistic)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionDrawRect)
        self.toolBar.addAction(self.actionClearDraw)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSegment)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPostClump)
        self.toolBar.addAction(self.actionRasterToVector)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSplitDataSet)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUpdateModelsDB)
        self.toolBar.addAction(self.actionUpdateDatabase)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "遥感影像智能解译系统"))
        self.fileMenu.setTitle(_translate("MainWindow", "文件"))
        self.viewMenu.setTitle(_translate("MainWindow", "视图"))
        self.sampleMenu.setTitle(_translate("MainWindow", "样本"))
        self.trainMenu.setTitle(_translate("MainWindow", "训练"))
        self.processMenu.setTitle(_translate("MainWindow", "处理"))
        self.toolMenu.setTitle(_translate("MainWindow", "工具"))
        self.helpMenu.setTitle(_translate("MainWindow", "帮助"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.dockWidgetTOCView.setWindowTitle(_translate("MainWindow", "图层"))
        self.dockWidgetSampleListView.setWindowTitle(_translate("MainWindow", "样本库列表"))
        self.action.setText(_translate("MainWindow", "打开影像"))
        self.actionqqq.setText(_translate("MainWindow", "新建工程"))
        self.actionNewProject.setText(_translate("MainWindow", "新建工程"))
        self.actionOpenProject.setText(_translate("MainWindow", "打开工程"))
        self.actionCloseProject.setText(_translate("MainWindow", "关闭工程"))
        self.actionSaveProject.setText(_translate("MainWindow", "保存工程"))
        self.actionSaveAsProject.setText(_translate("MainWindow", "另存工程..."))
        self.actionOpenRas.setText(_translate("MainWindow", "打开影像"))
        self.actionOpenVec.setText(_translate("MainWindow", "打开矢量"))
        self.actionZoomIn.setText(_translate("MainWindow", "放大"))
        self.actionZoomOut.setText(_translate("MainWindow", "缩小"))
        self.actionPan.setText(_translate("MainWindow", "平移"))
        self.actionFullExtent.setText(_translate("MainWindow", "全图显示"))
        self.actionSwipe.setText(_translate("MainWindow", "卷帘"))
        self.actionLayerView.setText(_translate("MainWindow", "图层面板"))
        self.actionSamplesView.setText(_translate("MainWindow", "样本库面板"))
        self.actionClearRecentFiles.setText(_translate("MainWindow", "清除列表"))
        self.actionEditSample.setText(_translate("MainWindow", "编辑矢量"))
        self.actionDrawPolygon.setText(_translate("MainWindow", "画多边形"))
        self.actionDeleteSample.setText(_translate("MainWindow", "删除要素"))
        self.actionMakeSample.setText(_translate("MainWindow", "样本制作"))
        self.actionEvalSample.setText(_translate("MainWindow", "样本评估"))
        self.actionImportSample.setText(_translate("MainWindow", "样本导入"))
        self.actionDeleteSamples.setText(_translate("MainWindow", "样本删除"))
        self.actionQuerySample.setText(_translate("MainWindow", "样本查询"))
        self.actionCloseSamples.setText(_translate("MainWindow", "样本关闭"))
        self.actionModelTrain.setText(_translate("MainWindow", "模型训练"))
        self.actionStopTrain.setText(_translate("MainWindow", "终止训练"))
        self.actionWatchTrain.setText(_translate("MainWindow", "监视训练"))
        self.actionDrawRect.setText(_translate("MainWindow", "画矩形"))
        self.actionClearDraw.setText(_translate("MainWindow", "清绘"))
        self.actionSegment.setText(_translate("MainWindow", "地物提取"))
        self.actionPostClump.setText(_translate("MainWindow", "聚类"))
        self.actionRasterToVector.setText(_translate("MainWindow", "栅格转矢量"))
        self.actionSplitDataSet.setText(_translate("MainWindow", "划分数据集"))
        self.actionSplitDataSet.setToolTip(_translate("MainWindow", "将数据集划分成训练集、验证集和测试集"))
        self.actionAbout.setText(_translate("MainWindow", "关于"))
        self.actionSampleStatistic.setText(_translate("MainWindow", "样本统计"))
        self.actionUpdateDatabase.setText(_translate("MainWindow", "更新样本数据库"))
        self.actionModelImport.setText(_translate("MainWindow", "ModelImport"))
        self.actionImportModel.setText(_translate("MainWindow", "模型导入"))
        self.actionDeleteModel.setText(_translate("MainWindow", "模型删除"))
        self.actionModelStatistic.setText(_translate("MainWindow", "模型统计"))
        self.actionUpdateModelsDB.setText(_translate("MainWindow", "更新模型数据库"))
        self.actionCreateFishnet.setText(_translate("MainWindow", "创建格网"))
        self.actionCreateShape.setText(_translate("MainWindow", "创建矢量"))
        self.actionClearSelection.setText(_translate("MainWindow", "清除选择"))
        self.actionSelectFeature.setText(_translate("MainWindow", "选择要素"))
        self.actionFeatureIdentify.setText(_translate("MainWindow", "识别要素"))
        self.actionUserManual.setText(_translate("MainWindow", "用户手册"))
        self.actionUndo.setText(_translate("MainWindow", "撤销"))
        self.actionRedo.setText(_translate("MainWindow", "恢复"))
import DeepLearningSystem_rc
